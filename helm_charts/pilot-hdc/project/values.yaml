appConfig:
  port: 5064
  env: staging
  srv_namespace: project

deploymentAnnotations:
  "sidecar.jaegertracing.io/inject": "true"

image:
  repository: docker-registry.ebrains.eu/hdc-services-image/project
  tag: 251
  pullPolicy: IfNotPresent

fullnameOverride: project
container:
  port: 5064

service:
  type: ClusterIP
  port: 5064

extraEnv:
  DCM_PROJECT_ID: generate_id
  RUN_MIGRATIONS: "true"
  S3_HOST: "minio.minio"
  S3_PORT: "9000"
  S3_HTTPS_ENABLED: "false"
  S3_GATEWAY_ENABLED: "false"
  S3_BUCKET_ENCRYPTION_ENABLED: "true"
  S3_PREFIX_FOR_PROJECT_IMAGE_URLS: "http://minio.minio:9000/project-logos"
  METADATA_SERVICE: "http://metadata.utility:5066"
  AUTH_SERVICE: "http://auth.utility:5061"
  HOST: "0.0.0.0"
  PORT: "5064"
extraEnvYaml:
  - name: OPSDB_UTILITY_USERNAME
    valueFrom:
      secretKeyRef:
        name: project-db-credential
        key: DB_USERNAME
  - name: OPSDB_UTILITY_PASSWORD
    valueFrom:
      secretKeyRef:
        name: project-db-credential
        key: DB_PASSWORD
  - name: OPSDB_UTILITY_HOST
    valueFrom:
      secretKeyRef:
        name: project-db-credential
        key: DB_HOST
  - name: OPSDB_UTILITY_PORT
    valueFrom:
      secretKeyRef:
        name: project-db-credential
        key: DB_PORT
  - name: S3_ACCESS_KEY
    valueFrom:
      secretKeyRef:
        name: minio-credential
        key: MINIO_ACCESS_KEY
  - name: S3_SECRET_KEY
    valueFrom:
      secretKeyRef:
        name: minio-credential
        key: MINIO_SECRET_KEY
resources:
  limits:
    cpu: "1"
    memory: 500Mi
  requests:
    cpu: "10m"
    memory: 50Mi

readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 5
  periodSeconds: 10
  successThreshold: 1
  tcpSocket:
    port: 5064

livenessProbe:
  failureThreshold: 3
  httpGet:
    path: /v1/health/
    port: 5064
    scheme: HTTP
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 3

replicaCount: 1

updateStrategy:
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 33%
  type: RollingUpdate
